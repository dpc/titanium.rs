pub const MPIDR_AFF0_SHIFT : u8 = 0 ; pub const MPIDR_AFF0_BITS : u64 = ((1 << (7 + 1 - 0)) - 7) ; pub const MPIDR_AFF0_MASK : u64 = (((1 << (7 + 1 - 0)) - 1) << 0);
pub const PTE_TYPE_SHIFT : u8 = 0 ; pub const PTE_TYPE_BITS : u64 = ((1 << (1 + 1 - 0)) - 1) ; pub const PTE_TYPE_MASK : u64 = (((1 << (1 + 1 - 0)) - 1) << 0);
pub const PTE_TYPE_INVALID : u64 = 0x0;
pub const PTE_TYPE_BLOCK : u64 = 0x1;
pub const PTE_TYPE_TABLE : u64 = 0x3;
pub const PTE_LATTRS_SHIFT : u8 = 2 ; pub const PTE_LATTRS_BITS : u64 = ((1 << (11 + 1 - 2)) - 11) ; pub const PTE_LATTRS_MASK : u64 = (((1 << (11 + 1 - 2)) - 1) << 2);
pub const PTE_ADDR_SHIFT : u8 = 12 ; pub const PTE_ADDR_BITS : u64 = ((1 << (47 + 1 - 12)) - 47) ; pub const PTE_ADDR_MASK : u64 = (((1 << (47 + 1 - 12)) - 1) << 12);
pub const PTE_HATTRS_SHIFT : u8 = 52 ; pub const PTE_HATTRS_BITS : u64 = ((1 << (63 + 1 - 52)) - 63) ; pub const PTE_HATTRS_MASK : u64 = (((1 << (63 + 1 - 52)) - 1) << 52);
pub const PTE_XN_SHIFT : u8 = 54 ; pub const PTE_XN_BITS : u64 = ((1 << (54 + 1 - 54)) - 54) ; pub const PTE_XN_MASK : u64 = (((1 << (54 + 1 - 54)) - 1) << 54);
pub const PTE_NG_SHIFT : u8 = 11 ; pub const PTE_NG_BITS : u64 = ((1 << (11 + 1 - 11)) - 11) ; pub const PTE_NG_MASK : u64 = (((1 << (11 + 1 - 11)) - 1) << 11);
pub const PTE_SH_SHIFT : u8 = 8 ; pub const PTE_SH_BITS : u64 = ((1 << (9 + 1 - 8)) - 9) ; pub const PTE_SH_MASK : u64 = (((1 << (9 + 1 - 8)) - 1) << 8);
pub const PTE_AP_SHIFT : u8 = 6 ; pub const PTE_AP_BITS : u64 = ((1 << (7 + 1 - 6)) - 7) ; pub const PTE_AP_MASK : u64 = (((1 << (7 + 1 - 6)) - 1) << 6);
pub const PTE_AP_KERNEL : u64 = 0x0;
pub const PTE_AP_RW: u64 = 0x1;
pub const PTE_AP_KERNEL_RO: u64 = 0x2;
pub const PTE_AP_RO: u64 = 0x3;
pub const PTE_NS_SHIFT : u8 = 5 ; pub const PTE_NS_BITS : u64 = ((1 << (5 + 1 - 5)) - 5) ; pub const PTE_NS_MASK : u64 = (((1 << (5 + 1 - 5)) - 1) << 5);
pub const PTE_ATTRINDX_SHIFT : u8 = 2 ; pub const PTE_ATTRINDX_BITS : u64 = ((1 << (4 + 1 - 2)) - 4) ; pub const PTE_ATTRINDX_MASK : u64 = (((1 << (4 + 1 - 2)) - 1) << 2);
pub const TTBR_BADDR_SHIFT : u8 = 0 ; pub const TTBR_BADDR_BITS : u64 = ((1 << (47 + 1 - 0)) - 47) ; pub const TTBR_BADDR_MASK : u64 = (((1 << (47 + 1 - 0)) - 1) << 0);
pub const TTBR_ASID_SHIFT : u8 = 48 ; pub const TTBR_ASID_BITS : u64 = ((1 << (63 + 1 - 48)) - 63) ; pub const TTBR_ASID_MASK : u64 = (((1 << (63 + 1 - 48)) - 1) << 48);
